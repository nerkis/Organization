/ page 0
	*20
saveAC,	0

	page
/ main program for pong game. bounces one bit of AC back and forth as
/ long as player presses a key at the right time 
main,	jms serve	/ call serve subroutine
serveR, cla cll
	tad startRgt
loop1,	jms wait	/ call wait subroutine
	cll ral		/ clear L and rotate left 1
	snl		/ if L is set, done moving left
	jmp loop1
	ksf		/ keyboard flag set?
	jms bell	/ no, ring bell
	ksf		/ check again
	jms serve	/ no flag, other player serve
	kcc
serveL,	cla cll
	tad startLft
loop2,	jms wait	/ call wait subroutine
	cll rar		/ clear L and rotate right 1
	snl		/ if L is set, done moving right
	jmp loop2
	ksf		/ keyboard flag set?
	jms bell	/ no, ring bell
	ksf		/ check again
	jmp main	/ no flag, other player serve
	kcc
	jmp serveR
	
startRgt, 0002	
startLft, 2000

	page
/ wait for an 'S' to be typed on the teletype
serve,	0
loop,	jms rdchar
	tad (-"S)	/ is character an S?
	sza cla		
	jmp loop	/ no S, check again
	jmp i serve	/ return from subroutine

/ read next character to AC
rdchar,	0
	ksf		/ character ready to read?
	jmp .-1		/ no, keep trying
	krb		/ yes, read it
	jmp i rdchar

/ write character in AC
wrchar,	0
	tsf		/ printer ready?
	jmp .-1		/ no, keep waiting
	tls		/ yes, send character to printer
	kcc
	jmp i wrchar

/ ring bell on the teletype after a miss
bell,	0
	tls		/ set printer flag so we know it's ready
	cla		
	tad (207)	/ set acc to bell sound
	jms wrchar	/ print bell sound
	jmp i bell

	page
/ wait for a period of time determined by the low 6 bits of the switch
/ register, while displaying the caller's contents of A in the console
/ lights
wait,	0		/ return address placed here by JMS
	dca saveAC	/ save AC so we can use it
	osr		/ read switch register into AC
	and (0077	/ mask off high six bits
	cma		/ -64 <= AC <= -1
	dca hiCount	/ put in high-order part of 24-bit counter
	tad saveAC	/ restore AC so user can see it while waiting
wait1,	isz loCount	/ inner loop, 4096 iterations
	jmp wait1
	isz hiCount	/ outer loop, count determined by switches
	jmp wait1
	jmp i wait

loCount, 0		/ low 12 bits of counter
hiCount, 0		/ high 12 bits of counter	

